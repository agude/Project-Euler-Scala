/* Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 *    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 */

def fibonacci(n: Int): Int = {
  var ret: Int = 0

  if (n == 0 | n == 1) { ret = n }
  else {
    ret = fibonacci(n-1) + fibonacci(n-2)
  }
  ret
}

def problem002: Int = {
  var answer: Int = 0
  var n: Int = 0
  var fib: Int = 0
  while (fib < 4000000) {
    n += 1
    fib = fibonacci(n)
    if (fib % 2 == 0) {
      answer += fib
    }
  }
  answer
}

// Compute the answer
println(problem002)
